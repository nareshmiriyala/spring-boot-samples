# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
spring.datasource.url = jdbc:h2:mem:AZ;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username = sa
spring.datasource.password =

# Mysql connector
spring.datasource.driverClassName =org.h2.Driver

server.port=8081


# ===============================
# = JPA / HIBERNATE
# ===============================

# Specify the DBMS
spring.jpa.database = H2

# Show or not log for each sql query
spring.jpa.show-sql = true

# Ddl auto must be set to "create" to ensure that Hibernate will run the
# import.sql file at application startup
spring.jpa.hibernate.ddl-auto = create

# SQL dialect for genereting optimized queries
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect


# ===============================
# = HIBERNATE SEARCH
# ===============================

# Spring Data JPA will take any properties under spring.jpa.properties.* and 
# pass them along (with the prefix stripped) once the EntityManagerFactory is 
# created.

# Specify the DirectoryProvider to use (the Lucene Directory)
#spring.jpa.properties.hibernate.search.default.directory_provider = filesystem

# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
spring.jpa.properties.hibernate.search.default.indexBase = /var/netgloo_blog/lucene/indexes/

### master configuration

## DirectoryProvider
# (remote) master location where information is copied to
spring.jpa.properties.hibernate.search.default.sourceBase = /mnt/mastervolume/lucenedirs/mastercopy


# refresh every half hour
spring.jpa.properties.hibernate.search.default.refresh = 1800

# appropriate directory provider
spring.jpa.properties.hibernate.search.default.directory_provider = filesystem-master

### master configuration
spring.jpa.properties.hibernate.search.default.worker.backend = jgroupsMaster

spring.jpa.properties.hibernate.search.services.jgroups.clusterName = My-Custom-Cluster-Id

## Backend configuration
#Backend is the default lucene one


# ===============================
# = THYMELEAF
# ===============================

spring.thymeleaf.cache = false
